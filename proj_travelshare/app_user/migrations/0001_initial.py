# Generated by Django 2.2 on 2019-05-12 04:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('0', 'Traveler'), ('1', 'Local Host')], default=None, max_length=1, null=True, verbose_name='Account Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.PositiveSmallIntegerField(choices=[(1, 'Abkhazian'), (2, 'Afar'), (3, 'Afrikaans'), (4, 'Akan'), (5, 'Albanian'), (6, 'Amharic'), (7, 'Arabic'), (8, 'Aragonese'), (9, 'Armenian'), (10, 'Assamese'), (11, 'Avaric'), (12, 'Avestan'), (13, 'Aymara'), (14, 'Azerbaijani'), (15, 'Bambara'), (16, 'Bashkir'), (17, 'Basque'), (18, 'Belarusian'), (19, 'Bengali'), (20, 'Bihari languages'), (21, 'Bislama'), (22, 'Bosnian'), (23, 'Breton'), (24, 'Bulgarian'), (25, 'Burmese'), (26, 'Catalan, Valencian'), (27, 'Chamorro'), (28, 'Chechen'), (29, 'Chichewa, Chewa, Nyanja'), (30, 'Chinese'), (31, 'Chuvash'), (32, 'Cornish'), (33, 'Corsican'), (34, 'Cree'), (35, 'Croatian'), (36, 'Czech'), (37, 'Danish'), (38, 'Divehi, Dhivehi, Maldivian'), (39, 'Dutch, Flemish'), (40, 'Dzongkha'), (41, 'English'), (42, 'Esperanto'), (43, 'Estonian'), (44, 'Ewe'), (45, 'Faroese'), (46, 'Fijian'), (47, 'Finnish'), (48, 'French'), (49, 'Fulah'), (50, 'Galician'), (51, 'Georgian'), (52, 'German'), (53, 'Greek'), (54, 'Guarani'), (55, 'Gujarati'), (56, 'Haitian Creole'), (57, 'Hausa'), (58, 'Hebrew'), (59, 'Herero'), (60, 'Hindi'), (61, 'Hiri Motu'), (62, 'Hungarian'), (63, 'Interlingua(International Auxiliary Language Association)'), (64, 'Indonesian'), (65, 'Interlingue, Occidental'), (66, 'Irish'), (67, 'Igbo'), (68, 'Inupiaq'), (69, 'Ido'), (70, 'Icelandic'), (71, 'Italian'), (72, 'Inuktitut'), (73, 'Japanese'), (74, 'Javanese'), (75, 'Kalaallisut, Greenlandic'), (76, 'Kannada'), (77, 'Kanuri'), (78, 'Kashmiri'), (79, 'Kazakh'), (80, 'Central Khmer'), (81, 'Kikuyu, Gikuyu'), (82, 'Kinyarwanda'), (83, 'Kirghiz, Kyrgyz'), (84, 'Komi'), (85, 'Kongo'), (86, 'Korean'), (87, 'Kurdish'), (88, 'Kuanyama, Kwanyama'), (89, 'Latin'), (90, 'Luxembourgish, Letzeburgesch'), (91, 'Ganda'), (92, 'Limburgan, Limburger, Limburgish'), (93, 'Lingala'), (94, 'Lao'), (95, 'Lithuanian'), (96, 'Luba-Katanga'), (97, 'Latvian'), (98, 'Manx'), (99, 'Macedonian'), (100, 'Malagasy'), (101, 'Malay'), (102, 'Malayalam'), (103, 'Maltese'), (104, 'Maori'), (105, 'Marathi'), (106, 'Marshallese'), (107, 'Mongolian'), (108, 'Nauru'), (109, 'Navajo, Navaho'), (110, 'North Ndebele'), (111, 'Nepali'), (112, 'Ndonga'), (113, 'Norwegian Bokmål'), (114, 'Norwegian Nynorsk'), (115, 'Norwegian'), (116, 'Sichuan Yi, Nuosu'), (117, 'South Ndebele'), (118, 'Occitan'), (119, 'Ojibwa'), (120, 'Church\xa0Slavic, Old Slavonic, Church Slavonic, Old Bulgarian,\xa0Old\xa0Church\xa0Slavonic'), (121, 'Oromo'), (122, 'Oriya'), (123, 'Ossetian, Ossetic'), (124, 'Panjabi, Punjabi'), (125, 'Pali'), (126, 'Persian'), (127, 'Polish'), (128, 'Pashto, Pushto'), (129, 'Portuguese'), (130, 'Quechua'), (131, 'Romansh'), (132, 'Rundi'), (133, 'Romanian, Moldavian, Moldovan'), (134, 'Russian'), (135, 'Sanskrit'), (136, 'Sardinian'), (137, 'Sindhi'), (138, 'Northern Sami'), (139, 'Samoan'), (140, 'Sango'), (141, 'Serbian'), (142, 'Gaelic, Scottish Gaelic'), (143, 'Shona'), (144, 'Sinhala, Sinhalese'), (145, 'Slovak'), (146, 'Slovenian'), (147, 'Somali'), (148, 'Southern Sotho'), (149, 'Spanish, Castilian'), (150, 'Sundanese'), (151, 'Swahili'), (152, 'Swati'), (153, 'Swedish'), (154, 'Tamil'), (155, 'Telugu'), (156, 'Tajik'), (157, 'Thai'), (158, 'Tigrinya'), (159, 'Tibetan'), (160, 'Turkmen'), (161, 'Tagalog'), (162, 'Tswana'), (163, 'Tonga\xa0(Tonga Islands)'), (164, 'Turkish'), (165, 'Tsonga'), (166, 'Tatar'), (167, 'Twi'), (168, 'Tahitian'), (169, 'Uighur, Uyghur'), (170, 'Ukrainian'), (171, 'Urdu'), (172, 'Uzbek'), (173, 'Venda'), (174, 'Vietnamese'), (175, 'Volapük'), (176, 'Walloon'), (177, 'Welsh'), (178, 'Wolof'), (179, 'Western Frisian'), (180, 'Xhosa'), (181, 'Yiddish'), (182, 'Yoruba'), (183, 'Zhuang, Chuang'), (184, 'Zulu')])),
            ],
            options={
                'ordering': ('language',),
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
            ],
            options={
                'ordering': ('category', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('topic', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('topic',),
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Course'), (2, 'Consultation'), (3, 'Lecture'), (4, 'Show'), (5, 'Talk'), (6, 'Workshop'), (7, 'Others')])),
                ('frequency', models.PositiveSmallIntegerField(choices=[(1, 'Once'), (2, 'Multiple'), (3, 'Fexible')])),
                ('duration', models.PositiveSmallIntegerField(choices=[(1, 'Less than 2 hours'), (2, '2 to 4 hours'), (3, '4 to 8 hours'), (4, 'More than 8 hours')])),
                ('title', models.CharField(max_length=120)),
                ('description', models.TextField()),
                ('requirement', models.TextField()),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileTraveler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('O', 'Other')], max_length=1)),
                ('nationality', models.CharField(choices=[('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia (Plurinational State of)'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('VI', 'Virgin Islands (U.S.)'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cabo Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo (Democratic Republic of the)'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GT', 'Guatemala'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('VA', 'Holy See'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('CI', "Côte d'Ivoire"), ('IR', 'Iran (Islamic Republic of)'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia (the former Yugoslav Republic of)'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia (Federated States of)'), ('MD', 'Moldova (Republic of)'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('KP', "Korea (Democratic People's Republic of)"), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine, State of'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('KR', 'Korea (Republic of)'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom of Great Britain and Northern Ireland'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela (Bolivarian Republic of)'), ('VN', 'Viet Nam'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=50)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('photo', models.ImageField(default='default.jpg', upload_to='profile_traveler')),
                ('bio', models.TextField(blank=True, null=True)),
                ('experience', models.TextField(blank=True, null=True)),
                ('language', models.ManyToManyField(to='app_user.Language')),
                ('link', models.ManyToManyField(to='app_user.Link')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_updated', models.DateTimeField(auto_now_add=True)),
                ('completed_perc', models.PositiveSmallIntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Association'), (2, 'Center'), (3, 'Club'), (4, 'Community'), (5, 'Company'), (6, 'Cooperative/Collective'), (7, 'Government/Town Council/Village'), (8, 'Institute'), (9, 'Museum'), (10, 'NGO/Foundation'), (11, 'Park'), (12, 'Political Party'), (13, 'School/Nursery/Kindergarten'), (14, 'Social Enterprise'), (15, 'Society'), (16, 'Station & Network'), (17, 'Support Group'), (18, 'Union'), (19, 'University'), (20, 'Others')], null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('photo', models.ImageField(default='default.jpg', upload_to='profile_host')),
                ('interest_details', models.TextField(blank=True)),
                ('interest', models.ManyToManyField(to='app_user.Topic')),
                ('language', models.ManyToManyField(to='app_user.Language')),
                ('link', models.ManyToManyField(to='app_user.Link')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
